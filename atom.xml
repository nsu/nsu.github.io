<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Hypervisor]]></title>
  <link href="http://blog.alexkarpinski.com/atom.xml" rel="self"/>
  <link href="http://blog.alexkarpinski.com/"/>
  <updated>2014-04-29T22:42:06-04:00</updated>
  <id>http://blog.alexkarpinski.com/</id>
  <author>
    <name><![CDATA[Alex Karpinski]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gays and Crays]]></title>
    <link href="http://blog.alexkarpinski.com/blog/2014/04/29/shrimp/"/>
    <updated>2014-04-29T21:08:00-04:00</updated>
    <id>http://blog.alexkarpinski.com/blog/2014/04/29/shrimp</id>
    <content type="html"><![CDATA[<p><img class="center" src="https://fbcdn-sphotos-f-a.akamaihd.net/hphotos-ak-frc3/t1.0-9/10245495_919006288125429_4560575186344094594_n.png" width="350" height="350" title="image" alt="images"></p>

<p>Ugh, I wish it were that simple, but it really isn&rsquo;t, so I&rsquo;m going to try to take a crack at it. To start I&rsquo;ll assume we&rsquo;re talking about the issues of homosexuality and kosher food laws in Christianity. I&rsquo;m going to pretty much entirely ignore Judaism, since we don’t have a lot of bigoted Jews demonstrating against homosexuality in America. So, while both shellfish and homosexuality are pretty sinful in the Old Testament, the modern significance is really much more heavily geared towards Christianity than Rabbinic Judaism. If we can agree that we&rsquo;re talking about Christianity in general, then what asking about in particular is the role of the Torah. Obviously the Bible, as a compilation of a great variety of Jewish and Christian texts doesn’t offer one monolithic view on this issue, and delving into reformation theology complicates things further. So for our purposes I’m going to try to focus on the foundations of Christianity by looking at the New Testament gospels and the letters of Paul.</p>

<p>I wanted to sort of ignore the Synoptic Gospels (Matthew, Mark, Luke) because I don’t think there’s time for them here, but I can’t do that entirely because I think two particular sections are really interesting and passing them by would be a loss. First, the antitheses in Matthew, chapter 5, particularly verses 27-28. “You have heard that it was said, ‘You shall not commit adultery.’ But I say to you that everyone who looks at a woman with lust has already committed adultery with her in his heart.” Here and throughout the antitheses Jesus re-establishes the Jewish law as the foundation of faith in God. He specifically points to sexual proclivities as an affront to God, and says that even the desire to commit improper sex acts (which would have certainly included homosexuality) is a violation of the law.</p>

<p>The other verse I’d like to look at is Mark 2:27, “Then he said to them, ‘The Sabbath was made for man, not man for the Sabbath.’” This is a different gospel and a different path. I’m not going to pretend that Matt and Mark agree on everything. But I think this is an important example of ways in which the laws are undermined by Christ rather than upheld, even in the synoptics. The message is that faith and service to God aren’t proven by your blind adherence to earthly laws, but rather your desire to serve and your faith in God. In the woes to the Pharisees, Jesus calls out Jewish leaders as being hypocrites because they follow the letter of the law without faith in their hearts. So things like kosher food laws, and jewish purification rituals and cultic sacrifice are subverted in Mark. Are rules against homosexuality? Maybe. I find it less likely, but maybe.</p>

<p>Okay so that’s a short look at the synoptics. Let’s look at John real quick?</p>

<p>In John, it appears that the Jewish law is completely nullified by the salvific power manifested in the Christ. In John, Jesus says that “no one comes to the Father except through me” (John 14:6) In John’s model of Christianity (and this is a bit of a radical interpretation on my part) we explicitly enter a post-resurrection reality where it no longer matters if you bang dudes or eat shrimp. What counts here is is your knowledge that Christ and the Father are one. It’s sort of like Islam here, where you need to know the status of God and submit to his power with the added bonus that the previous covenants are all voided by this new one. But the problem with using this as a basis for your understanding of Christianit is that’s it’s fairly detached from the realities of life. John is really concerned more with a philosophical soteriology than with the practical life of a Christian believer, so I don’t think this is an end-all to the Christian message, especially in the face of the Synoptics and Paul</p>

<p>If we want to get a better look at what a Christian is to do in their lives, we should look at the apostle Paul whose letters make up a good portion of the New Testament. His letters focus on specific issues and occasions in the early Christian churches and attempted to provide theological responses and resolutions. Right off the bat let’s establish three things. One: Paul unambiguously identified himself as the apostle to the gentiles (Romans 11:13). Two: Most modern Christians are gentiles rather than converted Jews. Three: Therefore Paul’s writings are relevant to the majority of modern Christians. And what does Paul have to say about Torah? Don’t keep it if you’re a Gentile. In Galatians Paul is obviously angry about Jewish Jesus followers who have been telling Gentiles in the movement that they need to be circumcised in order to follow Jesus “Listen! I, Paul, am telling you that if you let yourselves be circumcised, Christ will be of no benefit to you” (Gal 5:2). It doesn’t get more clear than that. For a more subtle, but expansive tractate, you can turn to Romans. Here Paul lays out the parallel but distinct covenants that Jews and Christians have entreated into with God.The message is powerful throughout Paul: Gentiles, having Jesus, are now exempted from Torah.</p>

<p>Alright. So shellfish with your boyfriend: cool for Christ? Not really.</p>

<p>We see in 1 &amp; 2 Corinthians, Philemon and elsewhere a distinct Pauline desire for people to fit into specific societal roles. In 1 Corinthians women are encouraged to wear veils in church and keep their hair long (1 Cor 11), that a man should not sleep with his stepmother (1 Cor 5), and a general detest for the sexual immorality that made Corinth famous. Likewise, in Philemon, Paul returns an escaped slave to his master, both of whom are Christian. The message is that escaping from your socially mandated role is inappropriate. Stay in bondage like a “good slave”, keep your hair long like a “good woman”, don’t have kinky sex like a “good human”. I can’t help but believe that homosexuality falls into this category of stepping outside of your proper role for early Christians. As an aside, Seneca does a good bit on homosexuality  where he explains that what makes homosexuality wrong is that it makes a man submit to the penetration of another man, and thus sacrifices his manliness. This would be offensive to Paul as well, since relinquishing your manliness is a relinquishment of your God-given role.</p>

<p>I would like to offer up an explanation that might revive homosexuality in the view of Paul’s message. The discouragement of deviant sex acts is in part a response to a larger issue that faced early Christians. We have historical documents accusing Christians of just about every depraved act you can think of, from eating babies to incestuous orgies. This is a serious problem for a nascent religion. Paul’s response to this problem is to encourage Christians to be as good and righteous as possible. If Christians are remaining celibate, feeding the poor, going to work and generally being upstanding members of the community, then these accusations might fall flat. But if Christians are having sex with their stepmothers, running away from their masters and refusing to have sex with their husbands, then they’re going to look odd, and people are going to start asking what else they do behind closed doors. Paul wants to avoid this as much as possible. From this perspective, Paul wouldn’t command believers to avoid homosexuality in particular, but rather, deviant sexuality in general. So then what if our standards for deviancy change? If homosexuality can become an accepted behavior, then it doesn’t matter if you’re gay or not.</p>

<p>This is a slightly empty consolation, however. First of all, Christians, especially in America represent a powerful majority. Christianity is no longer a tiny messianic Jewish movement. For the broad social opinion to change, it has to change among Christians, they can’t rely on following the trends of a larger group in which they stand. They set the trends. Secondly, this means that Christianity is permanently socially conservative. By only following accepted social norms, Christianity would define itself as socially conservative by default on all issues of sexuality. This permanent attack on sexual deviancy would represent a harsh trajectory for the church, and a disappointing future for progressive Christians.</p>

<p>The point underlying all of this is that Christianity is complicated; theology can’t be discounted by word count alone. Those of us who live in Western society owe it to ourselves to take Christianity seriously on its own terms, not because it is necessarily correct, but because it is the philosophical water that we swim in.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[High availability postgres on AWS Pt 2: Options]]></title>
    <link href="http://blog.alexkarpinski.com/blog/2013/07/13/high-availability-postgres-on-aws-pt-2-options/"/>
    <updated>2013-07-13T19:53:00-04:00</updated>
    <id>http://blog.alexkarpinski.com/blog/2013/07/13/high-availability-postgres-on-aws-pt-2-options</id>
    <content type="html"><![CDATA[<p>In <a href="http://blog.alexkarpinski.com/blog/2013/06/30/high-availability-postgres-on-aws/">Part 1</a>, we talked
about the need for high availability, and the trouble with getting there using
Postgres on AWS. In part 2, we&rsquo;re going to examine two possible options for
gaining extra availability and scalibility.</p>

<p>Proper warning: I am <strong>not</strong> a Database Admin. I&rsquo;m responsible for the design
and implementation of many different kinds of tools for Sudo. My goal is to
build the least complex solution that fully solves our problems, and my choices
reflect that.</p>

<p>Alright, with that out of the way, let&rsquo;s get right to it.</p>

<h2>Postgres 9.x with Streaming Replication</h2>

<p>This is the solution that I know the least about and did the least research
into, but I&rsquo;m including a mention of it here because I think it may be a very
reliable answer to this problem, if only you have more time and patience than I
do.</p>

<p>The gist of this configuration is that you run multiple Postgres servers in
<a href="https://wiki.postgresql.org/wiki/Streaming_Replication">streaming replication mode</a>.
This is a configuration option that is built into postgres itself, and requires
no outside software to manage, so far as I can tell.</p>

<p>The problem is that it&rsquo;s not simple. Not in the least. Obviously nothing is
simple when it comes to database scaling, but this setup looked particularly
intensive.</p>

<p>I think anyone with the patience to slog through
<a href="http://www.postgresql.org/docs/9.0/static/high-availability.html">the official documentation</a>
absolutely ought to. I simply didn&rsquo;t have the time, and I knew simpler options
were out there. Aside from the complexity, my only concerns were that I&rsquo;d need
to end up using some extra piece of software for load balancing, and that
correctly load balancing reads/writes would end up being even <strong>more</strong>
difficult.</p>

<p>I was also slightly concerned with how to use Chef to manage such an
infrastructure, since ideally all the nodes are identical, but due to the nature
of standbys and masters and standbys, you end up with a sort of
first-among-equals problem.</p>

<h2>Along Comes Pgpool</h2>

<p>Enter <a href="http://www.pgpool.net/mediawiki/index.php/Main_Page">pgpool</a>
The next two solutions lean heavily on pgpool. Pgpool, with its streaming
replication mode, load balancing, node recovery and other features make it an
excellent alternative to using postgres itself to provide replication.</p>

<p>Here&rsquo;s a quick rundown of what we get from pgpool</p>

<ul>
<li>Load balancing</li>
<li>Health checks</li>
<li>Streaming replication</li>
<li>Online recovery</li>
</ul>


<h3>Online Recovery</h3>

<p>It&rsquo;s worth spending a little time talking about online recovery alone.</p>

<p>What it means is that if one backend database gets out of sync with the others,
pgpool will notice and attempt to bring the node back into sync with the rest of
the pool. The most obvious use for this feature is to help surviving against
temporary outages of availability zones without having to re-provision entire
clusters by hand.</p>

<p>But the best part of online recovery is that you can add new instances to the
pool dynamically. This means you can add more databases backends as you need
them, and you can take down individual instances to increase their size in AWS
without having to lose database access or manually recover them back into the
pool once they boot back up.</p>

<h3>SPOF</h3>

<p>The next two solutions are all based on the premise that pgpool will be handling
the majority of the complex backend task of keeping data synchronized and load
balancing reads and writes. A basic configuration looks a little something like
this.</p>

<p><img class="center" src="http://blog.alexkarpinski.com/images/pgool-basics.png" title="" ></p>

<p>This configuration provides all of the wonderful benefits of onlne recovery and
load balancing, and it gives us a bit of extra security against outages, but
there&rsquo;s one <em>big</em> problem that comes along with this setup. Pgpool now
represents a SPOF, or single point of failure. If that one pgpool goes down, it
takes out all database access. In the case of AWS, this means outage of a single
availability zone can take down your whole application.</p>

<p>In Part 3 we&rsquo;ll look into some configurations that can reduce the risk of this
SPOF.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Devops on an iPad]]></title>
    <link href="http://blog.alexkarpinski.com/blog/2013/07/10/devops-on-an-ipad/"/>
    <updated>2013-07-10T00:36:00-04:00</updated>
    <id>http://blog.alexkarpinski.com/blog/2013/07/10/devops-on-an-ipad</id>
    <content type="html"><![CDATA[<p>When I started software development I worked pretty much exclusively on my
personal notebook, in my lap. I ended up migrating to a pretty standard
workstation by 2011.</p>

<p>Combining a <a href="http://www.hengedocks.com/">Henge Dock</a> with a pretty heavily upgraded
13&#8221; Macbook Pro, and a <a href="http://pckeyboard.com/page/UKBD/UB40P4A">Unicomp Classic</a>,
gave me a really nice, capable work environment. Coupling that with a big home
next room with kernel-based virtual machines made for carefree testing.</p>

<p>This setup gave me a ton of flexibility and the freedom
to work on static websites, web applications, and devops configurations with
little to no interruption or reconfiguration. If you like having a conventional
desktop workstation, I can highly recommend this style.</p>

<p>When I started working for Sudo in early 2013, I shifted from a role of combined
operations and development, to full-time operations engineering. This meant that
most of my time was spent SSH\&rsquo;d into other servers, and what time wasn&rsquo;t spend
there, was spent in the Amazon Web Services console.</p>

<p>Also I had to go to an office. On this.</p>

<p><img class="center" src="http://blog.alexkarpinski.com/images/giant_escape.png" width="350" height="350" title="image" alt="images"></p>

<p>Taking in a laptop every day with the possibility of accidents and rain wasn&rsquo;t
appealing to me. Add to that the weight of a laptop, and I wasn&rsquo;t looking
forward to my commute.</p>

<p>I&rsquo;ve never really gotten the point of tablets. That&rsquo;s not to say I think they&rsquo;re
bad, but I never had any urge to buy one. Faced with my new commute and a new
job, they were suddenly starting to look appealing.</p>

<p>I was already spending all of my time in a single application anyway. If all I
needed was Terminal and a bit of Chrome on my laptop, why should it be any
different on the iPad? Full screen terminals are a perfect work environment, and
that translates to the tablet ecosystem better than a whole lot of other tasks
that have ended up on there.</p>

<p>As long as I could get a half-decent terminal emulator and SSH client on an
iPad, I could hook it up an an EC2 instance inside Sudo&rsquo;s VPC and be right back
to work.</p>

<p>NOTE: I really wanted to make this work on a Microsoft Surface RT, but the
software just wasn&rsquo;t ready.</p>

<p>Now I bike to work with an iPad on the back of my bike.</p>

<p><img class="center" src="http://blog.alexkarpinski.com/images/ipad-panniers.png" width="350" height="350" title="image" alt="images"></p>

<p>It&rsquo;s way lighter, way harder to break, and a lot less to lose if it gets stolen.
Coupled with the fantastic <a href="http://www.moshimonde.com/product/iglaze-with-versacover.aspx">Moshi Versacover</a>,
a bluetooth keyboard, and <a href="http://www.zinger-soft.com/iSSH_features.html">iSSH</a>
you actually end up with a pretty capable development machine.</p>

<p>Unless you need the AWS Console.</p>

<p>If you need the AWS Web Console You&rsquo;re going to have a terrible time with this
setup. I had to entirely abandon the web interface for AWS when working from my
iPad. It&rsquo;s sluggish at best, dangerous at worst. Most of the time it just takes
forever to load anything, and once it has, good luck interacting with it.
Often, Safari (or Chrome, or Opera) will simply crash when trying to load a new
interface component. If you&rsquo;re really unlucky your impatient taps will finally
get registeres after two or three minutes of waiting, only to incorrectly
configure a new load balancer of Route53 record.</p>

<p>When it comes to AWS, use the <a href="https://aws.amazon.com/cli/">CLI tools</a>, or one
of the SDKs. I&rsquo;ve used both <a href="https://aws.amazon.com/sdkforruby/">Ruby&rsquo;s aws-sdk</a>
and <a href="https://aws.amazon.com/sdkforpython/">Python&rsquo;s boto</a> and both are
fantastic.</p>

<p>The bottom line is that the iPad can be a great alternative to a conventional
desktop workstation, but it takes some serious getting used to, and has some
real limitations.</p>

<h2>More</h2>

<p>If you&rsquo;re interested in the idea, I really recommend checking out these links.</p>

<ul>
<li><a href="http://yieldthought.com/post/12239282034/swapped-my-macbook-for-an-ipad">I swapped my MacBook for an iPad+Linode</a></li>
<li><a href="http://yieldthought.com/post/31857050698/ipad-linode-1-year-later">iPad + Linode, 1 Year Later</a></li>
<li><a href="http://thebinaryapp.com/">Binary &ndash; Development Environment for iPad</a></li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[High availability postgres on AWS: The Problem]]></title>
    <link href="http://blog.alexkarpinski.com/blog/2013/06/30/high-availability-postgres-on-aws/"/>
    <updated>2013-06-30T00:00:00-04:00</updated>
    <id>http://blog.alexkarpinski.com/blog/2013/06/30/high-availability-postgres-on-aws</id>
    <content type="html"><![CDATA[<p>At <a href="http://gosudo.com">Sudo</a> we use Postgres for our database backend. Postgres
is a fantastic database that provides a lot of functionality and stability over
MySQL (and if you really want to use MySQL, you should use
<a href="http://mariadb.org/">MariaDB</a> instead). However, there is one big caveat:
AWS doesn&rsquo;t support Postgres for RDS yet. This means that if you want high
availability and scalability with Postgres, you&rsquo;re going to have to implement
your own solution.</p>

<p>There are things like <a href="http://www.cloudpostgres.com/">Cloud Postgres</a> out there, but
they don&rsquo;t provide anything like the power of RDS. Ideally, if you&rsquo;re running
your application on AWS, you should try to use RDS. That means using MySQL,
OracleDB or MSSQL, if at all possible, and saying goodbye to  Postgres until Amazon
integrates it into RDS. This will give you easy access to to performance and
reliability. You really can&rsquo;t beat it.</p>

<p><img class="center" src="http://blog.alexkarpinski.com/images/yourproblem.png" width="350" height="350" title="image" alt="images"></p>

<p style="text-align:center;"> <em>Your Problem</em></p>

<p><img class="center" src="http://blog.alexkarpinski.com/images/notyourproblem.png" width="350" height="350" title="image" alt="images"></p>

<p style="text-align:center;"> <em>Not Your Problem</em></p>

<p>However, if you&rsquo;re like Sudo, you don&rsquo;t really have that choice. We use location
data extensively for to help users find deals near them, and that means we need
a location-aware DB. Check out
<a href="http://www.bostongis.com/PrinterFriendly.aspx?content_name=sqlserver2008_postgis_mysql_compare">these tables</a>
for a good comparison of the available location-aware databases. Then compare that with
<a href="https://docs.djangoproject.com/en/dev/ref/databases/#using-a-3rd-party-database-backend">Django&rsquo;s ORM compatability</a>
and compare all of that to <a href="https://docs.djangoproject.com/en/dev/ref/contrib/gis/db-api/">GeoDjango&rsquo;s compatible database
backends</a></p>

<p>The result is that we&rsquo;re pretty much stuck with Postgres, and that means
we have toroll our own database infrastructure.</p>

<h2>What Do We Want?</h2>

<p>So our requirements are something like this (and in this order)</p>

<ol>
<li>Support location data</li>
<li>Support Django</li>
<li>Provide high availability</li>
<li>Provide scaling capacity</li>
</ol>


<p>Just by picking Postgres+PostGIS we get #1 an #2, literally for free. If you&rsquo;re
curious how easy it is to set up a location aware Postgres database with Django,
well, <a href="https://docs.djangoproject.com/en/dev/ref/contrib/gis/install/postgis/">It&rsquo;s not that easy, but it&rsquo;s not that
hard either</a></p>

<p>Getting the last two problems solved is a lot harder than the first two, though,
and it&rsquo;s probably worthwhile to at least examine the basic reasons you might
want each.</p>

<p>If you&rsquo;re comfortable with operations engineering, you can probably skip this
next bit safely.</p>

<h3>High Availability</h3>

<p>Any sysadmin should crave uptime. Ideally no part of your
infrastructure should be a single point of failure for your application. This
means clustering, failover, replication, and more. The goal should be not just
to keep your application from going offline, but to keep you and your team
from having to rescue or rebuild it by hand. Ideally, a database server could
go down and the rest of your cluster could recover without going offline. Better
yet, a replacement server could be automatically provisioned, and joined to the
cluster to replace the broken node. If you can set this up across all
availability zones in an AWS region, and you get a database cluster that&rsquo;s very
hard to take down without an act of God (or a very mistaken sysadmin).</p>

<p>The fast pace of modern development, taken together with the complicated systems
that they leverage means that things will inevitably break. High availability
architecture ensures that a single server failing doesn&rsquo;t cause any serious
damage or downtime to your application.</p>

<p>This is equally good for developers and users. For operations engineers, this
means no 3am calls from Nagios requiring you to manually repair a database.</p>

<p>For users, it means the application is always ready for them whenever they want
it.</p>

<p><img class="center" src="http://blog.alexkarpinski.com/images/reddit.png" width="350" height="350" title="image" alt="images"></p>

<p style="text-align:center;"> Avoid this</p>

<h3>High Scalability</h3>

<p>While Sudo doesn&rsquo;t need the sort of performance that apps like Instagram or
Pinterest use AWS to achieve, we don&rsquo;t want to be locked into a low-performance
solution for our database, just because it fit our needs early on.</p>

<p>The goal here is to build a database layer that can increase and decrease in
performance in order to best fit our needs at any given time. This
means that not only should we have the ability to easily scale our database
to respond to increases in user demand, but we should also be able to decrease
during lulls in order to minimize cost.</p>

<h2>What&rsquo;s Next?</h2>

<p>There are a number of ways to solve this problem. At Sudo we use
<a href="http://www.opscode.com/chef/">Chef</a> for automated deployment, so any solution
we create will be implemented through it. If you&rsquo;re interested in some of the
possible ways to go about building a solution, check out
<a href="http://blog.alexkarpinski.com/blog/2013/07/13/high-availability-postgres-on-aws-pt-2-options/">part 2</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Initial commit]]></title>
    <link href="http://blog.alexkarpinski.com/blog/2013/06/29/initial-commit/"/>
    <updated>2013-06-29T23:44:00-04:00</updated>
    <id>http://blog.alexkarpinski.com/blog/2013/06/29/initial-commit</id>
    <content type="html"><![CDATA[
]]></content>
  </entry>
  
</feed>
